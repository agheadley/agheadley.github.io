{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/scripts/initial.ts","../../src/scripts/state.ts","../../src/scripts/file.ts","../../src/scripts/csv.ts","../../src/components/Master.svelte","../../src/scripts/check.ts","../../src/components/Staff.svelte","../../src/components/Room.svelte","../../src/scripts/setup.ts","../../src/components/Setup.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.37.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","let core = {\r\n    yearList: [\"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"1\", \"0\"],\r\n    weekList: [\"A\"],\r\n    subjectList: [\"B\", \"C\", \"Cs\", \"Ch\", \"E\", \"M\"],\r\n    staffList: [\"AAA\", \"BBB\", \"CCC\"],\r\n    roomList: [\"A1\", \"A2\", \"A3\"],\r\n    deptList: [\r\n        { dept: \"CHE\", subject: \"C\", room: \"A1\" },\r\n        { dept: \"CHE\", subject: \"Cs\", room: \"A2\" }\r\n    ],\r\n    basedata: {\r\n        staff: [\r\n            { code: \"AAA\", name: \"A.Abbott\" },\r\n            { code: \"BBB\", name: \"B.Bishop\" },\r\n            { code: \"CCC\", name: \"C.Canon\" }\r\n        ],\r\n        rooms: [{ code: \"A1\" }, { code: \"A2\" }, { code: \"A3\" }],\r\n        subjects: [\r\n            { code: \"B\", name: \"Biology\" },\r\n            { code: \"C\", name: \"Chemistry\" },\r\n            { code: \"Cs\", name: \"Chemistry IBHL\" },\r\n            { code: \"Ch\", name: \"Chemistry IBSL\" },\r\n            { code: \"E\", name: \"English\" },\r\n            { code: \"M\", name: \"Mathematics\" }\r\n        ]\r\n    },\r\n    row: [\r\n        {\r\n            d: \"M\",\r\n            p: \"1\",\r\n            w: \"A\",\r\n            id: \"1\",\r\n            b: \"A\",\r\n            c: \"\",\r\n            s: \"\",\r\n            r: \"\",\r\n            e: \"\"\r\n        }\r\n    ],\r\n    rowList: [0],\r\n    blockList: [0],\r\n    blockColor: {\r\n        A: \"#f5f0e4\",\r\n        B: \"#d1e8e7\",\r\n        C: \"#e5ebd8\",\r\n        D: \"#f5e7e4\",\r\n        E: \"#d1e0e8\"\r\n    }\r\n};\r\nexport { core };\r\n","import * as initial from \"./initial\";\r\nlet version = {\r\n    active: \"version1\",\r\n    version1: {\r\n        name: \"v1\",\r\n        core: {},\r\n        data: []\r\n    },\r\n    version2: {\r\n        name: \"v2\",\r\n        core: {},\r\n        data: []\r\n    },\r\n    version3: {\r\n        name: \"v3\",\r\n        core: {},\r\n        data: []\r\n    },\r\n    version4: {\r\n        name: \"v4\",\r\n        core: {},\r\n        data: []\r\n    },\r\n    version5: {\r\n        name: \"v5\",\r\n        core: {},\r\n        data: []\r\n    }\r\n};\r\n/* gets version from local storage */\r\nlet getVersion = (versionKey = version.active) => {\r\n    version[versionKey] = JSON.parse(localStorage.getItem(versionKey));\r\n    return version[versionKey];\r\n};\r\n/* puts core, data into version storage */\r\nlet putVersion = (versionKey = version.active, versionValue = false) => {\r\n    if (!versionValue) {\r\n        localStorage.setItem(versionKey, JSON.stringify(version[versionKey]));\r\n    }\r\n    else {\r\n        localStorage.setItem(versionKey, JSON.stringify(versionValue));\r\n        version[versionKey] = versionValue;\r\n    }\r\n};\r\n/* add a blank row */\r\nlet addRow = (year, versionKey = version.active) => {\r\n    let row = JSON.parse(JSON.stringify(version[version.active].core.row));\r\n    console.log(\"adding year \", year);\r\n    let newIndex = version[versionKey].core.yearList.indexOf(year);\r\n    let pos = 0;\r\n    let flag = true;\r\n    for (let item of version[version.active].data) {\r\n        //let dataIndex = core.yearList.indexOf(item.y);\r\n        let dataIndex = version[version.active].core.yearList.indexOf(item.y);\r\n        console.log(dataIndex, newIndex);\r\n        if (flag) {\r\n            if (dataIndex > newIndex) {\r\n                pos = version[version.active].data.indexOf(item);\r\n                console.log(\"adding @\", pos);\r\n                flag = false;\r\n            }\r\n        }\r\n    }\r\n    if (flag) {\r\n        console.log(\"pushing to end\");\r\n        version[version.active].data.push({ y: year, row: row });\r\n    }\r\n    else {\r\n        version[version.active].data.splice(pos, 0, { y: year, row: row });\r\n    }\r\n    putVersion();\r\n};\r\nlet deleteRow = (index, versionKey = version.active) => {\r\n    version[version.active].data.splice(index, 1);\r\n    putVersion();\r\n};\r\n/* rowObj {i:data.length,y:year,row:row[]} */\r\nlet putRow = (row, rowObj, versionKey = version.active) => {\r\n    version[version.active].data[row] = rowObj;\r\n    putVersion();\r\n};\r\nlet removeStorage = (storageKey) => {\r\n    localStorage.removeItem(storageKey);\r\n};\r\nlet deleteData = (versionKey = version.active) => {\r\n    version[versionKey].data = [];\r\n    putVersion(versionKey);\r\n};\r\nlet getVersionKeys = () => {\r\n    let keys = Object.keys(version);\r\n    keys = keys.filter((el) => el !== \"active\");\r\n    return keys;\r\n};\r\nlet getActive = () => {\r\n    if (localStorage.getItem(\"active\") === null)\r\n        return \"\";\r\n    else\r\n        return localStorage.getItem(\"active\");\r\n};\r\nlet setActive = (versionKey) => {\r\n    version.active = versionKey;\r\n    localStorage.setItem(\"active\", version.active);\r\n};\r\nlet initVersion = (versionKey = version.active) => {\r\n    if (localStorage.getItem(versionKey) === null) {\r\n        let index = getVersionKeys().indexOf(versionKey);\r\n        version[versionKey].name = \"v\" + (index + 1);\r\n        version[versionKey].data = [];\r\n        version[versionKey].core = JSON.parse(JSON.stringify(initial.core));\r\n        putVersion(versionKey);\r\n    }\r\n};\r\nexport { getVersion, putVersion, addRow, deleteRow, putRow, initVersion, deleteData, getVersionKeys, getActive, setActive, removeStorage };\r\n","let csvDownload = (arr2d, filename) => {\r\n    let eol = String.fromCharCode(13) + String.fromCharCode(10);\r\n    let content = \"\";\r\n    arr2d.forEach(function (row, index) {\r\n        content += row.join(\",\") + eol;\r\n    });\r\n    //content = encodeURI(content);\r\n    var blob = new Blob([content], { type: \"text/plain\" });\r\n    var url = window.URL.createObjectURL(blob);\r\n    var a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = filename;\r\n    a.click();\r\n};\r\nlet download = (text, filename) => {\r\n    var blob = new Blob([text], { type: \"text/plain\" });\r\n    var url = window.URL.createObjectURL(blob);\r\n    var a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = filename;\r\n    a.click();\r\n};\r\nlet read = (fileObj, callback) => {\r\n    let reader = new FileReader();\r\n    reader.readAsText(fileObj);\r\n    reader.onload = () => {\r\n        callback(reader.result);\r\n    };\r\n};\r\n// outputs arr of objects with keys as first line of csv\r\n// checks against headerArr\r\n// e.g ['id','name',['info',false]]\r\n// checks headers are present and each line has a value for\r\n// id and name, info optional.\r\nlet csvProcess = (txt, headArr) => {\r\n    let data = csvToArray(txt);\r\n    //console.log(data);\r\n    //for (let [i, v] of data[0].entries()) {\r\n    //  data[0][i] = (\" \" + v).toLowerCase().trim();\r\n    //console.log(data[0]);\r\n    //}\r\n    let headers = [];\r\n    let valid = true;\r\n    // add true, to non-array - i.e. must be present in data rows.\r\n    let checkArr = [];\r\n    for (let item of headArr) {\r\n        if (!Array.isArray(item))\r\n            checkArr.push([item, true]);\r\n        else\r\n            checkArr.push(item);\r\n    }\r\n    console.log(\"checArr\", checkArr);\r\n    // now check headers are present in data\r\n    for (let item of checkArr) {\r\n        if (data[0].indexOf(item[0]) > -1)\r\n            headers.push({\r\n                name: item[0],\r\n                index: data[0].indexOf(item[0]),\r\n                check: item[1]\r\n            });\r\n        else\r\n            return { data: [], valid: false };\r\n    }\r\n    console.log(\"csvProcess, headers \", headers, valid);\r\n    console.log(\"csvProcess raw data\", data);\r\n    let out = [];\r\n    let count = 0;\r\n    for (let i = 1; i < data.length; i++) {\r\n        let valid = true;\r\n        let obj = {};\r\n        for (let item of headers) {\r\n            obj[item.name] = data[i][item.index];\r\n            if (item.check && data[i][item.index] === \"\")\r\n                valid = false;\r\n        }\r\n        if (valid) {\r\n            out.push(obj);\r\n            count += 1;\r\n        }\r\n        else\r\n            console.log(\"csvProcess, row error : \", data[i].toString());\r\n    }\r\n    if (count > 0)\r\n        valid = true;\r\n    console.log('csvProcess, found ', count, \" / \", (data.length - 1), \" valid rows\");\r\n    console.log(out, valid);\r\n    return { data: out, valid: valid };\r\n};\r\n//https://stackoverflow.com/questions/8493195/how-can-i-parse-a-csv-string-with-javascript-which-contains-comma-in-data\r\n//2d array from csv file\r\nlet csvToArray = (text) => {\r\n    let p = \"\", row = [\"\"], ret = [row], i = 0, r = 0, s = !0, l;\r\n    for (l of text) {\r\n        if ('\"' === l) {\r\n            if (s && l === p)\r\n                row[i] += l;\r\n            s = !s;\r\n        }\r\n        else if (\",\" === l && s)\r\n            l = row[++i] = \"\";\r\n        else if (\"\\n\" === l && s) {\r\n            if (\"\\r\" === p)\r\n                row[i] = row[i].slice(0, -1);\r\n            row = ret[++r] = [(l = \"\")];\r\n            i = 0;\r\n        }\r\n        else\r\n            row[i] += l;\r\n        p = l;\r\n    }\r\n    return ret;\r\n};\r\nexport { read, csvProcess, download, csvDownload, csvToArray };\r\n","/* cretae 2d array for export (headers in first row) */\r\nlet createExport = (data, row, exportType) => {\r\n    console.log(exportType);\r\n    console.log(row);\r\n    console.log(data);\r\n    let arr2d = [];\r\n    arr2d[0] = [exportType.toUpperCase(), \"(count)\", \"(type)\"];\r\n    if (exportType === \"MASTER\")\r\n        arr2d[0] = [\"YEAR\", \"(type)\"];\r\n    for (let col of row)\r\n        arr2d[0].push(col.d + col.p + \"/\" + col.w);\r\n    for (let item of data) {\r\n        let line = [item.name, item.count, \"CLASS\"];\r\n        if (exportType === \"MASTER\")\r\n            line = [item.y, \"CLASS\"];\r\n        for (let col of item.row) {\r\n            line.push(col.c);\r\n        }\r\n        arr2d.push(line);\r\n        line = [item.name, item.count, \"STAFF\"];\r\n        if (exportType === \"MASTER\")\r\n            line = [item.y, \"STAFF\"];\r\n        for (let col of item.row) {\r\n            line.push(col.s);\r\n        }\r\n        arr2d.push(line);\r\n        line = [item.name, item.count, \"ROOM\"];\r\n        if (exportType === \"MASTER\")\r\n            line = [item.y, \"ROOM\"];\r\n        for (let col of item.row) {\r\n            line.push(col.r);\r\n        }\r\n        arr2d.push(line);\r\n    }\r\n    return arr2d;\r\n};\r\nexport { createExport };\r\n","<script lang=\"ts\">\r\n    \r\nimport * as state from \"./../scripts/state\";\r\nimport * as check from \"./../scripts/check\";\r\nimport * as file from \"./../scripts/file\";\r\nimport * as csv from \"./../scripts/csv\";\r\n\r\n\r\nexport function exportTxt() {\r\n    file.download(JSON.stringify(state.getVersion()),versionName.replace(\" \",\"\")+\"_data.txt\");\r\n}\r\n\r\nexport function exportTimetable() {\r\n    let arr2d = csv.createExport(data, core.row, \"MASTER\");\r\n    console.log(arr2d);\r\n    let fileName = versionName.replace(\" \",\"\")+\"_\"+\"master.csv\";\r\n    file.csvDownload(arr2d, fileName);\r\n};\r\n\r\nlet versionName = state.getVersion().name;\r\nlet data = state.getVersion().data;\r\nlet core = state.getVersion().core;\r\nlet yearFlag = false;\r\nlet blockFlag = false;\r\nlet colorFlag = false;\r\n\r\nlet inputFlag=false;\r\nlet forgetFlag=false;\r\n\r\nlet yearSelected = core.yearList[0];\r\nlet weekSelected = core.weekList[0];\r\n\r\nlet subjectSelected=\"\";\r\nlet roomSelected=\"\";\r\nlet staffSelected=\"\";\r\nlet setSelected=\"\";\r\n\r\nexport function appRefresh() {\r\n    data = state.getVersion().data;\r\n} \r\n\r\nlet refreshData = () => {\r\n    data = state.getVersion().data;\r\n};\r\n\r\nlet displayList = core.rowList;\r\n\r\nlet editRow = -1;\r\nlet editCol = -1;\r\n\r\nlet edit = (row, col) => {\r\n    editRow = row;\r\n    editCol = col;\r\n    if(subjectSelected.replace(\" \",\"\")!==\"\" && setSelected.replace(\" \",\"\")!==\"\" && data[row].row[col].c===\"\" && data[row].row[col].s===\"\" && data[row].row[col].r===\"\") {\r\n        // clear cell - insert data straight away.\r\n        insertCellData(true);\r\n    } else if(data[row].row[col].c!==\"\" || data[row].row[col].s!==\"\" || data[row].row[col].r!==\"\") {\r\n        // data already there, so bring up modal.\r\n        subjectSelected=data[row].row[col].c.split('/')[0];\r\n        setSelected=data[row].row[col].c.split('/')[1];\r\n        staffSelected=data[row].row[col].s;\r\n        roomSelected=data[row].row[col].r;\r\n        \r\n        \r\n        toggleCell();\r\n    }\r\n    \r\n\r\n};\r\n\r\nlet toggleBlocks = () => {\r\n    blockFlag = !blockFlag;\r\n    displayList = core.rowList;\r\n    if (blockFlag) displayList = core.blockList;\r\n    console.log(displayList);\r\n};\r\n\r\nlet toggleCell = (flag:boolean=true)=> {\r\n    // if flag paremeter supplied as false - simply close modal\r\n    if(!flag) {\r\n        let el=document.getElementById('cell-modal');\r\n\t    el.style.width=\"0\";\r\n\t    } else {\r\n        let el=document.getElementById('cell-modal');\r\n\t    if(el.style.width===\"100%\") el.style.width=\"0\";\r\n\t    else el.style.width=\"100%\";   \r\n    }\r\n};\r\n\r\nlet insertCellData=(flag:boolean) =>{\r\n    console.log(\"insertCellData : \",flag);\r\n\r\n    let setInfo=subjectSelected.replace(\" \", \"\")+\"/\"+setSelected.replace(\" \",\"\");\r\n    if(!flag) setInfo=\"\";\r\n    if(subjectSelected.replace(\" \",\"\")===\"\" && setSelected.replace(\" \",\"\")===\"\") setInfo=\"\";\r\n    let staffInfo=staffSelected.replace(\" \", \"\").toUpperCase();\r\n    if(!flag) staffInfo=\"\";\r\n    let roomInfo=roomSelected.replace(\" \", \"\");\r\n    if(!flag) roomInfo=\"\";\r\n\r\n    data[editRow].row[editCol].c = setInfo;\r\n    data[editRow].row[editCol].s = staffInfo;\r\n    data[editRow].row[editCol].r = roomInfo;\r\n    console.log(data[editRow].row[editCol]);\r\n    state.putRow(editRow, data[editRow]);\r\n    check.updateErrors(editCol);\r\n\r\n    editRow = -1;\r\n    editCol = -1;\r\n\r\n    if(forgetFlag) {\r\n        subjectSelected=\"\";\r\n        setSelected=\"\";\r\n        staffSelected=\"\";\r\n        roomSelected=\"\";\r\n    }\r\n\r\n    refreshData();\r\n\r\n    toggleCell(false);\r\n}\r\n\r\nlet resetInput=()=>{\r\n    subjectSelected=\"\";\r\n    staffSelected=\"\";\r\n    roomSelected=\"\";\r\n    setSelected=\"\";\r\n};\r\n\r\nlet addRow = () => {\r\n    state.addRow(yearSelected);\r\n    data = state.getVersion().data;\r\n};\r\n\r\nlet deleteIndex:number=-1;\r\n\r\nlet deleteRow = () => {\r\n    console.log('deleting row:',deleteIndex);\r\n    state.deleteRow(deleteIndex);\r\n    refreshData();\r\n    toggleDelete();\r\n    deleteIndex=-1;\r\n};\r\n\r\nlet toggleDelete=(index=-1)=>{\r\n\r\n    if(index!==-1) deleteIndex=index;\r\n    //console.log('index(toggleDelete):',index);\r\n\r\n\tlet el=document.getElementById('delete-modal');\r\n\tif(el.style.width===\"100%\") el.style.width=\"0\";\r\n\telse el.style.width=\"100%\";\r\n};\r\n\r\n</script>\r\n    \r\n<div class=\"container-small\">\r\n\r\n<div class=\"flex-justify\">\r\n<div class=\"flex-left\">\r\n    <div class=\"no-print paddingx1\">\r\n        <div>\r\n            {#if !inputFlag}\r\n            <select class=\"width10\" bind:value={subjectSelected}>\r\n                <option value=\"\">Subject</option>\r\n                {#each core.subjectList as option,i}\r\n                 <option value={option}>{option}</option>\r\n                {/each}\r\n            </select>\r\n            {/if}\r\n            {#if inputFlag}\r\n            <input bind:value={subjectSelected} type=\"text\" class=\"width10\" size=\"3\" placeholder=\"Subject\"/>\r\n            {/if}\r\n        </div>\r\n        <div>\r\n            <input bind:value={setSelected} type=\"text\" class=\"width10\" size=\"3\" placeholder=\"Set\"/>  \r\n        </div>\r\n        <div>\r\n            {#if !inputFlag}\r\n            <select class=\"width10\" bind:value={staffSelected}>\r\n                <option value=\"\">Staff</option>\r\n                {#each core.staffList as option,i}\r\n                 <option value={option}>{option}</option>\r\n                {/each}\r\n            </select>\r\n            {/if}\r\n            {#if inputFlag}\r\n            <input bind:value={staffSelected} type=\"text\" class=\"width10\" size=\"3\" placeholder=\"Staff\"/>\r\n            {/if}\r\n        </div>\r\n        <div>\r\n            {#if !inputFlag}\r\n            <select class=\"width10\" bind:value={roomSelected}>\r\n                <option value=\"\">Room</option>\r\n                {#each core.roomList as option,i}\r\n                 <option value={option}>{option}</option>\r\n                {/each}\r\n            </select>\r\n            {/if}\r\n            {#if inputFlag}\r\n            <input bind:value={roomSelected} type=\"text\" class=\"width10\" size=\"3\" placeholder=\"Room\"/>\r\n            {/if}\r\n        </div>\r\n\r\n        \r\n    </div>\r\n    <div class=\"no-print paddingx1\">\r\n        <div><button class=\"danger\" on:click={resetInput}>Reset</button></div>\r\n        <div>&nbsp;</div>\r\n        <div><label>Freestyle</label><input type=checkbox bind:checked={inputFlag}/></div>\r\n        <div><label>Forget</label><input type=checkbox bind:checked={forgetFlag}/></div>\r\n\r\n    </div>\r\n    <div class=\"no-print paddingx1\">\r\n        <div>\r\n            <select class=\"width10\" bind:value={weekSelected}>\r\n                {#each core.weekList as option,i}\r\n                 <option value={option}>{option}</option>\r\n                {/each}\r\n            </select>\r\n        </div> \r\n        <div>\r\n            \r\n            <select class=\"width10\"  bind:value={yearSelected}>\r\n                {#each core.yearList as option,i}\r\n                 <option value={option}>{option}</option>\r\n                {/each}\r\n            </select>\r\n         \r\n        </div> \r\n    </div>\r\n    <div class=\"no-print paddingx1\">\r\n        <div>\r\n        {#if !yearFlag}<button class=\"width10\" on:click={()=>yearFlag=!yearFlag}>ALL YEARS</button>{/if}\r\n        {#if yearFlag}<button class=\"primary-bg width10\" on:click={()=>yearFlag=!yearFlag}>ALL YEARS</button>{/if}\r\n        </div>\r\n        <div>\r\n        {#if !blockFlag}<button class=\"width10\" on:click={toggleBlocks}>BLOCKS</button>{/if}\r\n        {#if blockFlag}<button class=\"primary-bg width10\" on:click={toggleBlocks}>BLOCKS</button>{/if}\r\n        </div>\r\n        <div>\r\n\t\t{#if !colorFlag}<button class=\"width10\" on:click={()=>colorFlag=!colorFlag}>COLOUR</button>{/if}\r\n        {#if colorFlag}<button class=\"primary-bg width10\" on:click={()=>colorFlag=!colorFlag}>COLOUR</button>{/if}   \r\n        </div>\r\n    </div>\r\n    \r\n</div>\r\n\r\n<div class=\"paddingx1\"><h2>{versionName}</h2></div>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n\r\n    \r\n                \r\n            \r\n\r\n<div class=\"container\">\r\n\r\n<table>\r\n\r\n        <thead>\r\n          {#if blockFlag}\r\n          <tr>\r\n      \r\n          <th class=\"small no-print\"><div class=\"fixed-width\"></div></th>\r\n          <th class=\"small\"><div class=\"fixed-width\">&nbsp;</div></th>\r\n          \r\n      \r\n              {#each displayList as item}\r\n            {#if core.row[item].w===weekSelected}\r\n            \r\n            {#if colorFlag}\r\n            <th class=\"small\" style=\"background-color:{core.row[item].b === \"-\" ? \"rgba(0,0,0,0)\" : core.blockColor[core.row[item].b]}\"><div class=\"fixed-width\">{core.row[item].b}</div></th>\r\n            {/if}\r\n      \r\n      \r\n            {#if !colorFlag}\r\n            <th class=\"small\"><div class=\"fixed-width\">{core.row[item].b}</div></th>\r\n            {/if}\r\n            \r\n            \r\n            \r\n            {/if}\r\n              {/each}\r\n          </tr>\r\n          {/if}\r\n          <tr>\r\n      \r\n          <th class=\"small no-print\"><div class=\"fixed-width\">&nbsp;</div></th>\r\n          <th class=\"small\"><div class=\"fixed-width\">&nbsp;</div></th>\r\n          \r\n              {#each displayList as item}\r\n            {#if core.row[item].w===weekSelected}\r\n            \r\n            {#if colorFlag}\r\n            <th class=\"small\" style=\"background-color:{core.row[item].b === \"-\" ? \"rgba(0,0,0,0)\" : core.blockColor[core.row[item].b]}\"><div class=\"fixed-width\">{core.row[item].d+core.row[item].p}</div></th>\r\n            {/if}\r\n            \r\n            {#if !colorFlag}\r\n            <th class=\"small fixed\"><div class=\"fixed-width\">{core.row[item].d+core.row[item].p}</div></th>\r\n            {/if}\r\n            \r\n            {/if}\r\n              {/each}\r\n          </tr>\r\n          \r\n        </thead>\r\n\r\n\r\n\r\n        <tbody>\r\n            {#each data as rowItem,row}\r\n              {#if rowItem.y===yearSelected || yearFlag}\r\n              <tr>\r\n                <td class=\"small no-print\">\r\n                <a class=\"large\" href=\"#\" style=\"color:red;\"on:click={()=>toggleDelete(row)}>&times;</a>\r\n                </td>\r\n              <th class=\"small\">{rowItem.y}</th>\r\n        \r\n              {#each displayList as col}\r\n              {#if core.row[col].w===weekSelected}\r\n              \r\n              {#if !colorFlag}\r\n              <td class=\"small\">\r\n              \r\n              <!--{#if editRow!==row || editCol!==col}-->\r\n              \r\n              <div on:click={()=>edit(row,col)}>\r\n              <div><b>{data[row].row[col].c}</b></div>\r\n              <div><i>{data[row].row[col].s}&nbsp;</i></div>\r\n              <div>{data[row].row[col].r}</div>\r\n              \r\n              {#if !data[row].row[col].e}\r\n              <div class=\"no-print\">&nbsp;</div>\r\n              {/if}\r\n              \r\n              {#if data[row].row[col].e}\r\n              <div class=\"no-print danger-bg paddingx1\">{data[row].row[col].e}</div>\r\n              {/if}\r\n              \r\n              </div>\r\n              <!--{/if}-->\r\n        \r\n              <!--\r\n              {#if editRow===row && editCol===col}\r\n              <Cell bind:row={editRow} bind:col={editCol} on:refresh={refreshData}/>\r\n              {/if}\r\n              -->\r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n              </td>\r\n              {/if}\r\n              \r\n        \r\n              {#if colorFlag}\r\n              <td class=\"small\" style=\"background-color:{core.row[col].b === \"-\" ? \"rgba(0,0,0,0)\" : core.blockColor[core.row[col].b]}\">\r\n              \r\n              <!--{#if editRow!==row || editCol!==col}-->\r\n              \r\n              <div on:click={()=>edit(row,col)}>\r\n              <div><b>{data[row].row[col].c}</b></div>\r\n              <div><i>{data[row].row[col].s}&nbsp;</i></div>\r\n              <div>{data[row].row[col].r}</div>\r\n              \r\n              {#if !data[row].row[col].e}\r\n              <div class=\"no-print\">&nbsp;</div>\r\n              {/if}\r\n              \r\n              {#if data[row].row[col].e}\r\n              <div class=\"no-print danger-bg paddingx1\">{data[row].row[col].e}</div>\r\n              {/if}\r\n              \r\n              </div>\r\n              <!--{/if}-->\r\n        \r\n              <!--\r\n              {#if editRow===row && editCol===col}\r\n              \r\n              <Cell bind:row={editRow} bind:col={editCol} on:refresh={refreshData}/>\r\n              {/if}\r\n              -->\r\n        \r\n        \r\n        \r\n        \r\n        \r\n              </td>\r\n              {/if}\r\n              \r\n        \r\n        \r\n              {/if}\r\n                  {/each}\r\n        \r\n        \r\n        \r\n              </tr>\r\n              {/if}\r\n            {/each}\r\n          </tbody>\r\n\r\n</table>\r\n\r\n\r\n<p class=\"no-print\"><a href=\"#\" class=\"large\" on:click={addRow}>&plus;</a></p>\r\n\r\n\r\n\r\n</div>\r\n\r\n<div class=\"modal no-print\" id=\"delete-modal\">\r\n\t<div class=\"modal-card\">\r\n\t\t<h2>Delete Row</h2>\r\n\t\t<div class=\"card danger-bg\"><p>Are you sure you want to delete this row. This can't be undone!</p></div>\r\n        <button class=\"danger\" on:click={deleteRow}>Delete</button>\r\n\t\t<button on:click={toggleDelete}>Close</button></div>\r\n</div>\r\n\r\n<div class=\"modal no-print\" id=\"cell-modal\">\r\n<div class=\"modal-card\">\r\n\r\n    <h2>Edit Cell</h2>\r\n    <div class=\"flex-justify\">\r\n    \r\n        <div class=\"no-print paddingx1\">\r\n            <div>\r\n                {#if !inputFlag}\r\n                <select class=\"width10\" bind:value={subjectSelected}>\r\n                    <option value=\"\">Subject</option>\r\n                    {#each core.subjectList as option,i}\r\n                     <option value={option}>{option}</option>\r\n                    {/each}\r\n                </select>\r\n                {/if}\r\n                {#if inputFlag}\r\n                <input bind:value={subjectSelected} type=\"text\" class=\"width10\" size=\"3\" placeholder=\"Subject\"/>\r\n                {/if}\r\n            </div>\r\n            <div>\r\n                <input bind:value={setSelected} type=\"text\" class=\"width10\" size=\"3\" placeholder=\"Set\"/>  \r\n            </div>\r\n            <div>\r\n                {#if !inputFlag}\r\n                <select class=\"width10\" bind:value={staffSelected}>\r\n                    <option value=\"\">Staff</option>\r\n                    {#each core.staffList as option,i}\r\n                     <option value={option}>{option}</option>\r\n                    {/each}\r\n                </select>\r\n                {/if}\r\n                {#if inputFlag}\r\n                <input bind:value={staffSelected} type=\"text\" class=\"width10\" size=\"3\" placeholder=\"Staff\"/>\r\n                {/if}\r\n            </div>\r\n            <div>\r\n                {#if !inputFlag}\r\n                <select class=\"width10\" bind:value={roomSelected}>\r\n                    <option value=\"\">Room</option>\r\n                    {#each core.roomList as option,i}\r\n                     <option value={option}>{option}</option>\r\n                    {/each}\r\n                </select>\r\n                {/if}\r\n                {#if inputFlag}\r\n                <input bind:value={roomSelected} type=\"text\" class=\"width10\" size=\"3\" placeholder=\"Room\"/>\r\n                {/if}\r\n            </div>\r\n    \r\n            \r\n        </div>\r\n\r\n        <div class=\"no-print paddingx1\">\r\n            <div><button class=\"danger\" on:click={resetInput}>Reset</button></div>\r\n            <div>&nbsp;</div>\r\n            <div><label>Freestyle</label><input type=checkbox bind:checked={inputFlag}/></div>\r\n            <div><label>Forget</label><input type=checkbox bind:checked={forgetFlag}/></div>\r\n\r\n    \r\n        </div>\r\n    \r\n    \r\n    </div>\r\n    <p>\r\n        <button class=\"danger-bg\" on:click={()=>insertCellData(true)}>Update Cell Content</button>&nbsp;\r\n        <button class=\"danger-bg\" on:click={()=>insertCellData(false)}>Clear Cell Content</button>\r\n    </p>\r\n    <p>\r\n        <button on:click={toggleCell}>Cancel</button>\r\n    </p>\r\n\r\n\r\n</div>\r\n</div>\r\n    \r\n\r\n\r\n<style>\r\n\r\n   \r\n    .fixed-width {\r\n        width:3rem;\r\n        overflow:none;\r\n    }\r\n\r\n    .width10 {\r\n        width:10rem;\r\n        overflow:hidden;\r\n    }\r\n\r\n    .paddingx1 {\r\n        padding-right:1rem;\r\n        padding-left:1rem;\r\n    }\r\n\r\n   \r\n\r\n    \r\n</style>","import * as state from \"./state\";\r\nlet updateErrors = (col) => {\r\n    let data = state.getVersion().data;\r\n    /* replace all errors for column */\r\n    for (let row of data) {\r\n        row.row[col].e = \"\";\r\n    }\r\n    /* add staff errors */\r\n    for (let row of data) {\r\n        console.log(row.y, row.row[col].s, row.row[col].r, row.row[col].e);\r\n        let staffCheck = data\r\n            .map((el, i) => el.row[col].s === row.row[col].s && el.row[col].s !== \"\" ? i : -1)\r\n            .filter((index) => index !== -1);\r\n        console.log(row.row[col].s, staffCheck);\r\n        if (staffCheck.length > 1) {\r\n            for (let index of staffCheck) {\r\n                if (data[index].row[col].e.indexOf(\"S\") === -1)\r\n                    data[index].row[col].e += \"S\";\r\n            }\r\n        }\r\n    }\r\n    /* add room errors */\r\n    for (let row of data) {\r\n        console.log(row.y, row.row[col].s, row.row[col].r, row.row[col].e);\r\n        let roomCheck = data\r\n            .map((el, i) => el.row[col].r === row.row[col].r && el.row[col].r !== \"\" ? i : -1)\r\n            .filter((index) => index !== -1);\r\n        console.log(row.row[col].r, roomCheck);\r\n        if (roomCheck.length > 1) {\r\n            for (let index of roomCheck) {\r\n                if (data[index].row[col].e.indexOf(\"R\") === -1)\r\n                    data[index].row[col].e += \"R\";\r\n            }\r\n        }\r\n    }\r\n    /* add class errors */\r\n    for (let row of data) {\r\n        console.log(row.y, row.row[col].c, row.row[col].s, row.row[col].r, row.row[col].e);\r\n        let classCheck = data\r\n            .map((el, i) => (el.y + \"/\" + el.row[col].c) === (row.y + \"/\" + row.row[col].c) && el.row[col].c !== \"\" ? i : -1)\r\n            .filter((index) => index !== -1);\r\n        console.log(row.row[col].c, classCheck);\r\n        if (classCheck.length > 1) {\r\n            for (let index of classCheck) {\r\n                if (data[index].row[col].e.indexOf(\"C\") === -1)\r\n                    data[index].row[col].e += \"C\";\r\n            }\r\n        }\r\n    }\r\n    for (let i = 0; i < data.length; i++) {\r\n        state.putRow(i, data[i]);\r\n    }\r\n};\r\nlet checkInput = (value) => {\r\n    console.log(\"check.checkInput():\");\r\n    let flag = { class: false, staff: false, room: false };\r\n    flag.class = checkClass(value.class);\r\n    flag.staff = checkStaff(value.staff);\r\n    flag.room = checkRoom(value.room);\r\n    return flag;\r\n};\r\nlet checkStaff = (val) => {\r\n    val = val.replace(\" \", \"\").toUpperCase();\r\n    if (val === \"\")\r\n        return false;\r\n    let core = state.getVersion().core;\r\n    for (let item of core.staffList)\r\n        item = item.replace(\" \", \"\").toUpperCase();\r\n    if (core.staffList.indexOf(val) === -1)\r\n        return true;\r\n    else\r\n        return false;\r\n};\r\nlet checkRoom = (val) => {\r\n    val = val.replace(\" \", \"\");\r\n    if (val === \"\")\r\n        return false;\r\n    let core = state.getVersion().core;\r\n    for (let item of core.roomList)\r\n        item = item.replace(\" \", \"\");\r\n    if (core.roomList.indexOf(val) === -1)\r\n        return true;\r\n    else\r\n        return false;\r\n};\r\nlet checkClass = (val) => {\r\n    if (val.indexOf(\"/\") === -1)\r\n        return true;\r\n    val = val.replace(\" \", \"\").split(\"/\");\r\n    if (val.length !== 2 || val[0].length < 1 || val[1].length < 1)\r\n        return true;\r\n    let pattern = /^[a-z0-9]+$/i;\r\n    if (!pattern.test(val[1]))\r\n        return true;\r\n    let core = state.getVersion().core;\r\n    //console.log(\"check.checkClass():\");\r\n    //console.log(core.subjectList);\r\n    for (let item of core.subjectList)\r\n        item = item.replace(\" \", \"\");\r\n    if (core.subjectList.indexOf(val[0]) === -1)\r\n        return true;\r\n    return false;\r\n};\r\nexport { checkInput, updateErrors };\r\n","<script lang=\"ts\">\r\n\r\nimport * as state from \"./../scripts/state\";\r\n  import * as csv from \"./../scripts/csv\";\r\n  import * as file from \"./../scripts/file\";\r\n\r\n  let versionName = state.getVersion().name;\r\n  let data = state.getVersion().data;\r\n  let core = state.getVersion().core;\r\n  let allStaffFlag = false;\r\n  let blockFlag = false;\r\n  let colorFlag = false;\r\n  let displayList = core.rowList;\r\n  let weekList = core.weekList;\r\n  let weekSelected = weekList[0];\r\n  let deptList = [...new Set(core.deptList.map(el => el.dept))].sort();\r\n  let deptSelected = \"\";\r\n  \r\n  export function exportTimetable() {\r\n    let arr2d = csv.createExport(staffRoomData, core.row, \"STAFF\");\r\n    console.log(arr2d);\r\n    let fileName = versionName.replace(\" \",\"\")+\"_\"+deptSelected + \"_staff.csv\";\r\n    if (allStaffFlag) fileName = versionName.replace(\" \",\"\")+\"_\"+\"all_staff.csv\";\r\n    file.csvDownload(arr2d, fileName);\r\n  };\r\n\r\n  let toggleBlocks = () => {\r\n    blockFlag = !blockFlag;\r\n    displayList = core.rowList;\r\n    if (blockFlag) displayList = core.blockList;\r\n    console.log(displayList);\r\n  };\r\n\r\n  let toggleAllStaff = () => {\r\n    allStaffFlag=!allStaffFlag;\r\n    \r\n    getLessons(); \r\n  }\r\n\r\n\r\n  let staffRoomData = [];\r\n\r\n  let refreshData=()=>{\r\n    console.log(\"refreshData() \",deptSelected);\r\n    getLessons();\r\n    \r\n  };\r\n\r\n  let getLessons = () => {\r\n    console.log(\"***\", deptSelected, weekSelected, allStaffFlag);\r\n    let subjects = core.deptList\r\n      .filter(el => el.dept === deptSelected && el.subject !== \"\")\r\n      .map(el => el.subject);\r\n    if(allStaffFlag) subjects=core.deptList.map(el=>el.subject);\r\n\r\n    console.log(subjects);\r\n    let staff = [];\r\n    for (let row of data) {\r\n      for (let lesson of row.row) {\r\n        if (lesson.c !== \"\") {\r\n          //console.log(lesson.d, lesson.p, lesson.c);\r\n          let check = lesson.c.split(\"/\");\r\n          for (let subject of subjects) {\r\n            if (check[0] === subject || allStaffFlag === true) {\r\n              staff.push(lesson.s);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    staff = [...new Set(staff)].filter(el=>el!==\"\").sort();\r\n    console.log(staff);\r\n    staffRoomData = [];\r\n    for (let item of staff) {\r\n      let line = { name: item, count: 0, row: [] };\r\n      for (let col = 0; col < core.rowList.length; col++) {\r\n        let colObj = { c: \"\", s: \"\", r: \"\" };\r\n        let alreadyFlag = false;\r\n        for (let row of data) {\r\n          if (row.row[col].s === item && alreadyFlag === false) {\r\n            colObj.c = row.y + \"/\" + row.row[col].c;\r\n            colObj.s = row.row[col].s;\r\n            colObj.r = row.row[col].r;\r\n            alreadyFlag = true;\r\n            line.count += 1;\r\n          }\r\n        }\r\n        line.row.push(colObj);\r\n      }\r\n      staffRoomData.push(line);\r\n      console.log(line);\r\n      //let version = state.getVersion();\r\n      //version.staffRoomData = staffRoomData;\r\n      //state.putVersion(state.getActive(), version);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n\r\n\r\n<div class=\"container-small\">\r\n\r\n<div class=\"flex-justify\">\r\n    <div class=\"flex-left\">\r\n    <div class=\"no-print paddingx1\">\r\n        <select class=\"width10\" on:click={()=>refreshData()}  bind:value={deptSelected}>\r\n            <option value=\"\">Department</option>\r\n            {#each deptList as option,i}\r\n             <option value={option}>{option}</option>\r\n            {/each}\r\n        </select>\r\n    </div>\r\n\r\n    <div class=\"no-print paddingx1\">\r\n        <div>\r\n            <select class=\"width10\" bind:value={weekSelected}>\r\n                {#each weekList as option,i}\r\n                 <option value={option}>{option}</option>\r\n                {/each}\r\n                </select>\r\n        </div>\r\n        <div>\r\n        {#if !allStaffFlag}<button class=\"width10\" on:click={toggleAllStaff}>ALL STAFF</button>{/if}\r\n        {#if allStaffFlag}<button class=\"primary-bg width10\" on:click={toggleAllStaff}>ALL STAFF</button>{/if}\r\n        </div>\r\n        <div>\r\n        {#if !blockFlag}<button class=\"width10\" on:click={toggleBlocks}>BLOCKS</button>{/if}\r\n        {#if blockFlag}<button class=\"primary-bg width10\" on:click={toggleBlocks}>BLOCKS</button>{/if}\r\n        </div>\r\n        <div>\r\n\t\t{#if !colorFlag}<button class=\"width10\" on:click={()=>colorFlag=!colorFlag}>COLOUR</button>{/if}\r\n        {#if colorFlag}<button class=\"primary-bg width10\" on:click={()=>colorFlag=!colorFlag}>COLOUR</button>{/if}   \r\n        </div>\r\n    </div>\r\n    \r\n</div>\r\n\r\n<div>\r\n    <div class=\"paddingx1\"><h2>{versionName}</h2></div>\r\n    <div class=\"paddingx1\"><h2>{deptSelected}</h2></div>\r\n</div>\r\n\r\n</div>\r\n</div> <!-- end of control container-->\r\n\r\n<div class=\"container\">\r\n\r\n<table>\r\n\r\n    <thead>\r\n      {#if blockFlag}\r\n      <tr>\r\n  \r\n      <th class=\"small\"><div class=\"fixed-width\">&nbsp;</div></th>\r\n      <th class=\"small\"><div class=\"fixed-width\">&nbsp;</div></th>\r\n      \r\n  \r\n          {#each displayList as item}\r\n        {#if core.row[item].w===weekSelected}\r\n        \r\n        {#if colorFlag}\r\n        <th class=\"small\" style=\"background-color:{core.row[item].b === \"-\" ? \"rgba(0,0,0,0)\" : core.blockColor[core.row[item].b]}\"><div class=\"fixed-width\">{core.row[item].b}</div></th>\r\n        {/if}\r\n  \r\n  \r\n        {#if !colorFlag}\r\n        <th class=\"small\"><div class=\"fixed-width\">{core.row[item].b}</div></th>\r\n        {/if}\r\n        \r\n        \r\n        \r\n        {/if}\r\n          {/each}\r\n      </tr>\r\n      {/if}\r\n      <tr>\r\n  \r\n      <th class=\"small\"><div class=\"fixed-width\">&nbsp;</div></th>\r\n      <th class=\"small\"><div class=\"fixed-width\">&nbsp;</div></th>\r\n      \r\n          {#each displayList as item}\r\n        {#if core.row[item].w===weekSelected}\r\n        \r\n        {#if colorFlag}\r\n        <th class=\"small\" style=\"background-color:{core.row[item].b === \"-\" ? \"rgba(0,0,0,0)\" : core.blockColor[core.row[item].b]}\"><div class=\"fixed-width\">{core.row[item].d+core.row[item].p}</div></th>\r\n        {/if}\r\n        \r\n        {#if !colorFlag}\r\n        <th class=\"small fixed\"><div class=\"fixed-width\">{core.row[item].d+core.row[item].p}</div></th>\r\n        {/if}\r\n        \r\n        {/if}\r\n          {/each}\r\n      </tr>\r\n      \r\n    </thead>\r\n\r\n    <tbody>\r\n  \r\n        {#each staffRoomData as rowItem,row}\r\n        <tr>\r\n        <td class=\"small\">{rowItem.name}</td>\r\n        <td class=\"small\">{rowItem.count}</td>\r\n      \r\n        \r\n        {#each displayList as col}\r\n        \r\n        {#if core.row[col].w===weekSelected}\r\n        {#if !colorFlag}\r\n        <td class=\"small\">\r\n        <div><b>{rowItem.row[col].c}</b></div>\r\n        <div><i>{rowItem.row[col].s}&nbsp;</i></div>\r\n        <div>{rowItem.row[col].r}</div>\r\n            \r\n        </td>\r\n        {/if}\r\n      \r\n        {#if colorFlag}\r\n        <td class=\"small\" style=\"background-color:{core.row[col].b === \"-\" ? \"rgba(0,0,0,0)\" : core.blockColor[core.row[col].b]}\">\r\n        <div><b>{rowItem.row[col].c}</b></div>\r\n        <div><i>{rowItem.row[col].s}&nbsp;</i></div>\r\n        <div>{rowItem.row[col].r}</div>\r\n        </td>\r\n        {/if}\r\n      \r\n      \r\n        {/if}\r\n            \r\n        {/each}\r\n      \r\n        </tr>\r\n        {/each}\r\n      \r\n        </tbody>\r\n\r\n\r\n\r\n\r\n\r\n</table>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n<style>\r\n\r\n.width10 {\r\n        width:10rem;\r\n        overflow:hidden;\r\n    }\r\n\r\n.paddingx1 {\r\n    padding-right:1rem;\r\n    padding-left:1rem;\r\n}\r\n\r\n.fixed-width {\r\n        width:3rem;\r\n        overflow:none;\r\n    }\r\n\r\n\r\n\r\n</style>","<script lang=\"ts\">\r\n\r\n    import * as state from \"./../scripts/state\";\r\n      import * as csv from \"./../scripts/csv\";\r\n      import * as file from \"./../scripts/file\";\r\n    \r\n      let versionName = state.getVersion().name;\r\n      let data = state.getVersion().data;\r\n      let core = state.getVersion().core;\r\n      let allRoomFlag = false;\r\n      let blockFlag = false;\r\n      let colorFlag = false;\r\n      let displayList = core.rowList;\r\n      let weekList = core.weekList;\r\n      let weekSelected = weekList[0];\r\n      let deptList = [...new Set(core.deptList.map(el => el.dept))].sort();\r\n      let deptSelected = \"\";\r\n      \r\n      export function exportTimetable() {\r\n        let arr2d = csv.createExport(staffRoomData, core.row, \"ROOM\");\r\n        console.log(arr2d);\r\n        let fileName = versionName.replace(\" \",\"\")+\"_\"+deptSelected + \"_room.csv\";\r\n        if (allRoomFlag) fileName = versionName.replace(\" \",\"\")+\"_\"+\"all_room.csv\";\r\n        file.csvDownload(arr2d, fileName);\r\n      };\r\n    \r\n      let toggleBlocks = () => {\r\n        blockFlag = !blockFlag;\r\n        displayList = core.rowList;\r\n        if (blockFlag) displayList = core.blockList;\r\n        console.log(displayList);\r\n      };\r\n    \r\n      let toggleAllRooms = () => {\r\n        allRoomFlag=!allRoomFlag;\r\n        \r\n        getLessons(); \r\n      }\r\n    \r\n    \r\n      let staffRoomData = [];\r\n    \r\n      let refreshData=()=>{\r\n        console.log(\"refreshData() \",deptSelected);\r\n        getLessons();\r\n        \r\n      };\r\n    \r\n    let getLessons = () => {\r\n    //deptSelected = deptSelected;\r\n    console.log(\"***\", deptSelected, weekSelected, allRoomFlag);\r\n    let rooms = core.deptList\r\n      .filter(el => el.dept === deptSelected && el.room !== \"\")\r\n      .map(el => el.room);\r\n      if(allRoomFlag) rooms=core.deptList.map(el=>el.room);\r\n\r\n    console.log(rooms);\r\n    let roomList = [];\r\n    for (let row of data) {\r\n      for (let lesson of row.row) {\r\n        if (lesson.r !== \"\") {\r\n          //console.log(lesson.d, lesson.p, lesson.c);\r\n          for (let room of rooms) {\r\n            if (lesson.r === room || allRoomFlag === true) {\r\n              roomList.push(lesson.r);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    roomList = [...new Set(roomList)].sort();\r\n    console.log(roomList);\r\n    staffRoomData = [];\r\n    for (let item of roomList) {\r\n      let line = { name: item, count: 0, row: [] };\r\n      for (let col = 0; col < core.rowList.length; col++) {\r\n        let colObj = { c: \"\", s: \"\", r: \"\" };\r\n        let alreadyFlag = false;\r\n        for (let row of data) {\r\n          if (row.row[col].r === item && alreadyFlag === false) {\r\n            colObj.c = row.y + \"/\" + row.row[col].c;\r\n            colObj.s = row.row[col].s;\r\n            colObj.r = row.row[col].r;\r\n            alreadyFlag = true;\r\n            line.count += 1;\r\n          }\r\n        }\r\n        line.row.push(colObj);\r\n      }\r\n      staffRoomData.push(line);\r\n      console.log(line);\r\n      //let version = state.getVersion();\r\n      //version.staffRoomData = staffRoomData;\r\n      //state.putVersion(state.getActive(), version);\r\n    }\r\n  };\r\n\r\n    \r\n    \r\n    \r\n    \r\n    </script>\r\n    \r\n    \r\n    \r\n    <div class=\"container-small\">\r\n    \r\n    <div class=\"flex-justify\">\r\n        <div class=\"flex-left\">\r\n        <div class=\"no-print paddingx1\">\r\n            <select class=\"width10\" on:click={()=>refreshData()}  bind:value={deptSelected}>\r\n                <option value=\"\">Department</option>\r\n                {#each deptList as option,i}\r\n                 <option value={option}>{option}</option>\r\n                {/each}\r\n            </select>\r\n        </div>\r\n    \r\n        <div class=\"no-print paddingx1\">\r\n            <div>\r\n                <select class=\"width10\" bind:value={weekSelected}>\r\n                    {#each weekList as option,i}\r\n                     <option value={option}>{option}</option>\r\n                    {/each}\r\n                    </select>\r\n            </div>\r\n            <div>\r\n            {#if !allRoomFlag}<button class=\"width10\" on:click={toggleAllRooms}>ALL ROOMS</button>{/if}\r\n            {#if allRoomFlag}<button class=\"primary-bg width10\" on:click={toggleAllRooms}>ALL ROOMS</button>{/if}\r\n            </div>\r\n            <div>\r\n            {#if !blockFlag}<button class=\"width10\" on:click={toggleBlocks}>BLOCKS</button>{/if}\r\n            {#if blockFlag}<button class=\"primary-bg width10\" on:click={toggleBlocks}>BLOCKS</button>{/if}\r\n            </div>\r\n            <div>\r\n            {#if !colorFlag}<button class=\"width10\" on:click={()=>colorFlag=!colorFlag}>COLOUR</button>{/if}\r\n            {#if colorFlag}<button class=\"primary-bg width10\" on:click={()=>colorFlag=!colorFlag}>COLOUR</button>{/if}   \r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n    \r\n    <div>\r\n        <div class=\"paddingx1\"><h2>{versionName}</h2></div>\r\n        <div class=\"paddingx1\"><h2>{deptSelected}</h2></div>\r\n    </div>\r\n    \r\n    </div>\r\n    </div> <!-- end of control container-->\r\n    \r\n    <div class=\"container\">\r\n    \r\n    <table>\r\n    \r\n        <thead>\r\n          {#if blockFlag}\r\n          <tr>\r\n      \r\n          <th class=\"small\"><div class=\"fixed-width\">&nbsp;</div></th>\r\n          <th class=\"small\"><div class=\"fixed-width\">&nbsp;</div></th>\r\n          \r\n      \r\n              {#each displayList as item}\r\n            {#if core.row[item].w===weekSelected}\r\n            \r\n            {#if colorFlag}\r\n            <th class=\"small\" style=\"background-color:{core.row[item].b === \"-\" ? \"rgba(0,0,0,0)\" : core.blockColor[core.row[item].b]}\"><div class=\"fixed-width\">{core.row[item].b}</div></th>\r\n            {/if}\r\n      \r\n      \r\n            {#if !colorFlag}\r\n            <th class=\"small\"><div class=\"fixed-width\">{core.row[item].b}</div></th>\r\n            {/if}\r\n            \r\n            \r\n            \r\n            {/if}\r\n              {/each}\r\n          </tr>\r\n          {/if}\r\n          <tr>\r\n      \r\n          <th class=\"small\"><div class=\"fixed-width\">&nbsp;</div></th>\r\n          <th class=\"small\"><div class=\"fixed-width\">&nbsp;</div></th>\r\n          \r\n              {#each displayList as item}\r\n            {#if core.row[item].w===weekSelected}\r\n            \r\n            {#if colorFlag}\r\n            <th class=\"small\" style=\"background-color:{core.row[item].b === \"-\" ? \"rgba(0,0,0,0)\" : core.blockColor[core.row[item].b]}\"><div class=\"fixed-width\">{core.row[item].d+core.row[item].p}</div></th>\r\n            {/if}\r\n            \r\n            {#if !colorFlag}\r\n            <th class=\"small fixed\"><div class=\"fixed-width\">{core.row[item].d+core.row[item].p}</div></th>\r\n            {/if}\r\n            \r\n            {/if}\r\n              {/each}\r\n          </tr>\r\n          \r\n        </thead>\r\n    \r\n        <tbody>\r\n      \r\n            {#each staffRoomData as rowItem,row}\r\n            <tr>\r\n            <td class=\"small\">{rowItem.name}</td>\r\n            <td class=\"small\">{rowItem.count}</td>\r\n          \r\n            \r\n            {#each displayList as col}\r\n            \r\n            {#if core.row[col].w===weekSelected}\r\n            {#if !colorFlag}\r\n            <td class=\"small\">\r\n            <div><b>{rowItem.row[col].c}</b></div>\r\n            <div><i>{rowItem.row[col].s}&nbsp;</i></div>\r\n            <div>{rowItem.row[col].r}</div>\r\n                \r\n            </td>\r\n            {/if}\r\n          \r\n            {#if colorFlag}\r\n            <td class=\"small\" style=\"background-color:{core.row[col].b === \"-\" ? \"rgba(0,0,0,0)\" : core.blockColor[core.row[col].b]}\">\r\n            <div><b>{rowItem.row[col].c}</b></div>\r\n            <div><i>{rowItem.row[col].s}&nbsp;</i></div>\r\n            <div>{rowItem.row[col].r}</div>\r\n            </td>\r\n            {/if}\r\n          \r\n          \r\n            {/if}\r\n                \r\n            {/each}\r\n          \r\n            </tr>\r\n            {/each}\r\n          \r\n            </tbody>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    </table>\r\n    \r\n    </div>\r\n    \r\n    \r\n    \r\n    \r\n    <style>\r\n    \r\n    .width10 {\r\n            width:10rem;\r\n            overflow:hidden;\r\n        }\r\n    \r\n    .paddingx1 {\r\n        padding-right:1rem;\r\n        padding-left:1rem;\r\n    }\r\n    \r\n    .fixed-width {\r\n            width:3rem;\r\n            overflow:none;\r\n        }\r\n    \r\n    \r\n    \r\n    </style>","/* use letters for blocks, no block \"-\" symbol */\r\nlet createTimetableTemplates = (periodData) => {\r\n    let row = [];\r\n    for (let i = 0; i < periodData.length; i++) {\r\n        let item = periodData[i];\r\n        row.push({\r\n            d: (\" \" + item.day).trim(),\r\n            p: (\" \" + item.per).trim(),\r\n            w: (\" \" + item.week).trim(),\r\n            id: (\" \" + item.id).trim(),\r\n            b: (\" \" + item.block).trim(),\r\n            c: \"\",\r\n            s: \"\",\r\n            r: \"\",\r\n            e: \"\"\r\n        });\r\n    }\r\n    let rowList = [];\r\n    for (let i = 0; i < row.length; i++)\r\n        rowList.push(i);\r\n    let weekList = row.map((el) => el.w).sort();\r\n    weekList = [...new Set(weekList)];\r\n    //console.log(\"row\", row);\r\n    let blockList = createBlockTemplate(row);\r\n    //console.log(\"blockrow\", blockRow);\r\n    return {\r\n        row: row,\r\n        rowList: rowList,\r\n        blockList: blockList,\r\n        weekList: weekList\r\n    };\r\n};\r\nlet createBlockTemplate = (row) => {\r\n    let blocks = row\r\n        .filter((el) => (\" \" + el.b).trim() !== \"\")\r\n        .map((el) => (\" \" + el.b).trim())\r\n        .sort();\r\n    blocks = [...new Set(blocks)];\r\n    //console.log(\"blocks:\", blocks);\r\n    let blockList = [];\r\n    for (let block of blocks) {\r\n        let lessons = row.filter((el) => (\" \" + el.b).trim() === block);\r\n        console.log(\"block\", block);\r\n        console.log(\"lessons\", lessons);\r\n        for (let lesson of lessons) {\r\n            //blockList.push(lesson.i);\r\n            let index = row.findIndex((el) => el.p === lesson.p && el.d === lesson.d && el.w === lesson.w);\r\n            console.log(lesson.d, lesson.p, lesson.w, index);\r\n            blockList.push(index);\r\n        }\r\n    }\r\n    return blockList;\r\n};\r\n/* 2d array of basic data (basedata) - extract core basedata and return */\r\nlet extractBasedata = (arr2d) => {\r\n    let basedata = { valid: true, staff: [], rooms: [], subjects: [] };\r\n    let staff = arr2d.filter((el) => el[0] === \"TC\");\r\n    let staffList = [];\r\n    for (let item of staff) {\r\n        if (item.length && item.length === 3) {\r\n            staffList.push({ code: item[1], name: item[2] });\r\n        }\r\n    }\r\n    if (!staffList.length)\r\n        basedata.valid = false;\r\n    basedata.staff = staffList;\r\n    console.log(staffList);\r\n    let subjects = arr2d.filter((el) => el[0] === \"SB\");\r\n    let subjectList = [];\r\n    for (let item of subjects) {\r\n        if (item.length && item.length === 3) {\r\n            subjectList.push({ code: item[1], name: item[2] });\r\n        }\r\n    }\r\n    if (!subjectList.length)\r\n        basedata.valid = false;\r\n    basedata.subjects = subjectList;\r\n    console.log(subjectList);\r\n    let rooms = arr2d.filter((el) => el[0] === \"RM\");\r\n    let roomList = [];\r\n    for (let item of rooms) {\r\n        if (item.length && item.length === 2) {\r\n            roomList.push({ code: item[1] });\r\n        }\r\n    }\r\n    if (!roomList.length)\r\n        basedata.valid = false;\r\n    basedata.rooms = roomList;\r\n    console.log(roomList);\r\n    return basedata;\r\n};\r\nexport { createTimetableTemplates, extractBasedata };\r\n","<script lang=\"ts\">\r\n\r\nimport * as state from \"./../scripts/state\";\r\nimport * as file from \"../scripts/file\";\r\nimport * as setup from \"./../scripts/setup\";\r\n\r\n    \r\nlet files:File[];\r\nlet fileData:string=\"\";\r\n\r\nlet upload=()=>{\r\n    file.read(files[0],res=>{\r\n        fileData=res;\r\n        console.log(res);\r\n        processFileData(fileData);\r\n        \r\n    });\r\n};\r\n\r\n\r\n// versions\r\n\r\n  console.log\r\n\r\n  /* versions */\r\n  let versionKeys = state.getVersionKeys();\r\n\r\n  //if (!state.getActive()) state.setActive(versions[0]);\r\n  \r\n  let active = state.getActive();\r\n  let activeIndex = versionKeys.indexOf(state.getActive());\r\n  console.log(versionKeys,state.getActive(),activeIndex);\r\n\r\n  let versions = versionKeys.map(el => ({\r\n    key: el,\r\n    name: state.getVersion(el).name\r\n  }));\r\n\r\n  let selectVersion = index => {\r\n    state.setActive(versions[index].key);\r\n    active = state.getActive();\r\n    activeIndex = index;\r\n    toggleVersion();\r\n  };\r\n\r\n \r\n  let nameFlag=false;\r\n  let storeName = index => {\r\n    \r\n    nameFlag=false;\r\n\r\n    let pattern = /^[\\w\\-\\s]+$/;\r\n    let version = state.getVersion(versions[index].key);\r\n      \r\n    if (pattern.test(versions[index].name)) {\r\n      console.log(version);\r\n      version.name = (\" \"+versions[index].name).trim();\r\n      state.putVersion(versions[index].key);\r\n      nameFlag=true;\r\n      toggleName();\r\n    } else {\r\n        versions[index].name=version.name;\r\n        nameFlag=false;\r\n        toggleName();\r\n\r\n    }\r\n  };\r\n  //let copyFlag:boolean=false;\r\n  let copyVersionIndex:number=-1;\r\n  let pasteVersionIndex:number=-1;\r\n  \r\n  let copyVersionKey = \"\";\r\n  let pasteVersionKey=\"\";\r\n  let copyVersion = index => {\r\n    copyVersionIndex=index;\r\n    copyVersionKey = versions[index].key\r\n  };\r\n\r\n  let initPaste = index => {\r\n    pasteVersionKey = versions[index].key;\r\n    pasteVersionIndex=index;\r\n    togglePaste();\r\n  };\r\n  let pasteVersion = () => {\r\n    let copy = state.getVersion(versions[copyVersionIndex].key);\r\n    state.putVersion(versions[pasteVersionIndex].key, copy);\r\n    versions[pasteVersionIndex].name = versions[copyVersionIndex].name;\r\n    copyVersionKey = \"\";\r\n    pasteVersionKey= \"\";\r\n    pasteVersionIndex=-1;\r\n    togglePaste();\r\n  };\r\n\r\n\r\n\r\n  \r\n  let clearIndex = -1;\r\n\r\n  let initClear = index => {\r\n    clearIndex = index;\r\n    toggleClear();\r\n  };\r\n\r\n\r\n  let clearVersion = () => {\r\n    if (clearIndex !== -1) {\r\n      state.deleteData(versions[clearIndex].key);\r\n    }\r\n    versions[clearIndex].name=\"v\"+(clearIndex+1);\r\n    clearIndex = -1;\r\n    toggleClear();\r\n  };\r\n\r\n  /*\r\n  let resetIndex = -1;\r\n  let resetVersion = index => {\r\n    resetIndex = index;\r\n    error = \"reset\";\r\n  };\r\n  let confirmReset = () => {\r\n    if (resetIndex !== -1) {\r\n      state.removeStorage(versions[resetIndex].key);\r\n      state.initVersion(versions[resetIndex].key);\r\n      error = \"\";\r\n      versions[resetIndex].name = \"v\" + (resetIndex + 1);\r\n      resetIndex = -1;\r\n    }\r\n  };\r\n\r\n  let downloadVersion = index => {\r\n    let content = JSON.stringify(state.getVersion(versions[index].key));\r\n    file.download(content, \"version_\" + versions[index].name + \".ttv\");\r\n  };\r\n  \r\n\r\n  let uploadIndex = -1;\r\n  let uploadVersion = index => {\r\n    error = \"upload\";\r\n    uploadIndex = index;\r\n  };\r\n  let uploadVersionFile = () => {\r\n    file.read(files[0], res => {\r\n      console.log(res);\r\n      let version = JSON.parse(res);\r\n      state.putVersion(versions[uploadIndex].key, version);\r\n      versions[uploadIndex].name = version.name;\r\n      uploadIndex = -1;\r\n      error = \"\";\r\n    });\r\n  };\r\n\r\n */\r\n\r\n// setup data\r\n\r\n\r\nlet basedata = { valid: false };\r\nlet periodData = { valid: false };\r\nlet deptData={valid:false};\r\n\r\nlet dataType = \"\";\r\n\r\nlet processFileData = data => {\r\n    console.log(\"processFileData : \",fileData);\r\n    console.log(typeof fileData);\r\n\r\n    let info = file.csvToArray(fileData);\r\n    basedata = setup.extractBasedata(info);\r\n    if (basedata.valid) storeBasedata();\r\n    \r\n    periodData = file.csvProcess(fileData, [\"day\", \"per\", \"week\", \"id\", [\"block\",false]]);\r\n\r\n    if (periodData.valid) storePeriodData();\r\n    deptData=file.csvProcess(fileData, [\"dept\", [\"subject\",false], [\"room\",false]]);\r\n    if (deptData.valid) storeDeptData();\r\n    \r\n    if (!periodData.valid && !basedata.valid && !deptData.valid) dataType = \"error\";\r\n\r\n    console.log(\"processFileData : \",basedata,periodData,deptData);\r\n};\r\n\r\nlet storeDeptData=()=>{\r\n    dataType=\"dept\";\r\n    let version = state.getVersion();\r\n    version.core.deptList=deptData.data;\r\n    console.log(\"storeDeptData : \",version);\r\n    console.log(\"stored deptData\");\r\n    state.putVersion(state.getActive(), version);\r\n    \r\n\r\n};\r\n\r\n\r\nlet storePeriodData = () => {\r\n    dataType = \"period\";\r\n    let info = setup.createTimetableTemplates(periodData.data);\r\n    console.log(\"row template \", info);\r\n    let version = state.getVersion();\r\n    version.core.row = info.row;\r\n    version.core.rowList = info.rowList;\r\n    version.core.blockList = info.blockList;\r\n    version.core.weekList = info.weekList;\r\n    version.data = [];\r\n    console.log(version);\r\n    console.log(\"stored periodData\");\r\n    state.putVersion(state.getActive(), version);\r\n    return true;\r\n};\r\n\r\nlet storeBasedata = () => {\r\n    dataType = \"base\";\r\n    let version = state.getVersion();\r\n    version.core.basedata = {\r\n        staff: basedata.staff,\r\n        rooms: basedata.rooms,\r\n        subjects: basedata.subjects\r\n    };\r\n    version.core.staffList = [\r\n        ...new Set(basedata.staff.map(el => el.code))\r\n    ].sort();\r\n    version.core.roomList = [\r\n        ...new Set(basedata.rooms.map(el => el.code))\r\n    ].sort();\r\n    version.core.subjectList = [\r\n        ...new Set(basedata.subjects.map(el => el.code))\r\n    ].sort();\r\n    console.log(version);\r\n    state.putVersion(state.getActive(), version);\r\n    console.log(\"stored basedata\");\r\n    return true;\r\n};\r\n\r\n\r\n// modals\r\n\r\n    \r\nlet toggleVersion=()=>{\r\n        let el=document.getElementById('version-modal');\r\n        if(el.style.width===\"100%\") el.style.width=\"0\";\r\n        else el.style.width=\"100%\";\r\n};\r\n  \r\nlet toggleName=()=>{\r\n        let el=document.getElementById('name-modal');\r\n        if(el.style.width===\"100%\") el.style.width=\"0\";\r\n        else el.style.width=\"100%\";\r\n};\r\n  \r\nlet togglePaste=()=>{\r\n        let el=document.getElementById('paste-modal');\r\n        if(el.style.width===\"100%\") el.style.width=\"0\";\r\n        else el.style.width=\"100%\";\r\n};\r\n\r\nlet toggleClear=()=>{\r\n        let el=document.getElementById('clear-modal');\r\n        if(el.style.width===\"100%\") el.style.width=\"0\";\r\n        else el.style.width=\"100%\";\r\n};\r\n\r\n</script>\r\n\r\n    <div class=\"container\">\r\n        <h2>Setup</h2>\r\n    </div>\r\n\r\n    <div class=\"card\">\r\n        <div class=\"container\">\r\n            <h3>Version Control</h3>\r\n            <p>Click on a version to activate it.</p>\r\n            <p>Edit name and store to change the version name.</p>\r\n            <p>(Names can only have letters and numbers.)</p>\r\n            {#each versions as item,i}\r\n            <div class=\"flex-left\">\r\n                {#if i===activeIndex}\r\n                <div class=\"paddingx1\"><button on:click={()=>selectVersion(i)} class=\"width10 primary-bg\">{item.key}</button></div>\r\n                {/if}\r\n                {#if i!==activeIndex}\r\n                <div class=\"paddingx1\"><button on:click={()=>selectVersion(i)} class=\"width10\">{item.key}</button></div>\r\n                {/if}\r\n                \r\n                <div class=\"paddingx1\"><input class=\"width10\" type=text bind:value={item.name}/></div>\r\n                <div class=\"paddingx1\"><button on:click={()=>storeName(i)} class=\"width10\">Save Name</button></div>\r\n                <div class=\"paddingx1\"><button on:click={()=>copyVersion(i)} class=\"success\">Copy</button></div>\r\n                {#if copyVersionIndex===-1}\r\n                <div class=\"paddingx1\"><button disabled class=\"danger\">Paste</button></div>\r\n                {/if}\r\n                {#if copyVersionIndex>-1}\r\n                <div class=\"paddingx1\"><button on:click={()=>initPaste(i)} class=\"danger\">Paste</button></div>\r\n                {/if}\r\n                <div class=\"paddingx1\"><button on:click={()=>initClear(i)} class=\"danger\">Clear Data</button></div>\r\n            </div>\r\n            {/each}\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"card\">\r\n        <div class=\"container\">\r\n        <h3>Data Upload</h3>\r\n        <p>Setup data will be uploaded to the current timetable version only.</p>\r\n        </div>\r\n\r\n\r\n        {#if files && files[0] && dataType===\"\"}\r\n        <div class=\"card primary-bg\">\r\n            <p>Please process a valid based dataType, period data or deptartment data file is required.</p>\r\n            <p>WARNING : period data setup changes will delete any exisiting timetable data.</p>\r\n        </div>\r\n        {/if}\r\n        \r\n        {#if files && files[0] && dataType===\"error\"}\r\n        <div class=\"card danger-bg\">\r\n            <p>No valid data found. Please choose a different file.</p>\r\n        </div>\r\n        {/if}\r\n        \r\n        {#if files && files[0] && dataType===\"base\"}\r\n        <div class=\"card success-bg\">\r\n            <p>Valid base data uploaded to current timetable version.</p>\r\n        </div>\r\n        {/if}\r\n        {#if files && files[0] && dataType===\"period\"}\r\n        <div class=\"card success-bg\">\r\n            <p>Valid period data uploaded to current timetable version.</p>\r\n        </div>\r\n        {/if}\r\n        {#if files && files[0] && dataType===\"dept\"}\r\n        <div class=\"card success-bg\">\r\n            <p>Valid department / subjuect / room link data uploaded to current timetable version.</p>\r\n        </div>\r\n        {/if}\r\n        \r\n       \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"container\">\r\n          \r\n        <p><input on:click={()=>dataType=\"\"} type=\"file\" bind:files/></p>\r\n        \r\n        {#if files && files[0]}   \r\n        <p><button class=\"success\" on:click={upload}>Process</button></p>\r\n        {/if}\r\n        \r\n        </div>\r\n\r\n       \r\n        \r\n        \r\n    </div>\r\n    \r\n    \r\n    \r\n    <div class=\"modal\" id=\"version-modal\">\r\n        <div class=\"modal-card\">\r\n            <div class=\"card success-bg\">\r\n            <h3>Active Version</h3>\r\n            <p>Active version successfully swapped. No data has been changed.</p>\r\n            <p>Version: <b>{versions[activeIndex].key}</b></p>\r\n            <p>Name: <b>{versions[activeIndex].name}</b></p>\r\n            </div><div class=\"container\">\r\n            <button on:click={toggleVersion}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"modal\" id=\"name-modal\">\r\n        <div class=\"modal-card\">\r\n            {#if !nameFlag}\r\n            <div class=\"card danger-bg\">\r\n            <h3>Version Name</h3>\r\n            \r\n            <p>Version name will not be changed. Please retype with only letters / numbers before saving.</p>\r\n            </div>\r\n            {/if}\r\n            {#if nameFlag}\r\n            <div class=\"card success-bg\">\r\n            <h3>Version Name</h3>\r\n            \r\n            <p>Version name saved.</p>\r\n            </div>\r\n            {/if}\r\n            <div class=\"container\">\r\n            <button on:click={toggleName}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"modal\" id=\"paste-modal\">\r\n        <div class=\"modal-card\">\r\n            <div class=\"card\">\r\n            <h3>Paste Version</h3>\r\n            <p>Setup and cell data will be pasted.</p>\r\n            <p>From: <b>{copyVersionKey}</b></p>\r\n            <p>To: <b>{pasteVersionKey}</b></p>\r\n            \r\n            <p>WARNING: This can't be undone.</p>\r\n            \r\n            <div class=\"flex-justify\">\r\n                <div><button class=\"danger-bg\" on:click={pasteVersion}>Paste</button></div>\r\n                <div><button on:click={togglePaste}>Cancel</button></div>\r\n            </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"modal\" id=\"clear-modal\">\r\n        <div class=\"modal-card\">\r\n            <div class=\"card\">\r\n            <h3>Clear Data</h3>\r\n            <p>Cell data will be cleared.</p>\r\n            <p>WARNING: This can't be undone.</p>\r\n            \r\n            <div class=\"flex-justify\">\r\n                <div><button class=\"danger-bg\" on:click={clearVersion}>Clear</button></div>\r\n                <div><button on:click={toggleClear}>Cancel</button></div>\r\n            </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n    <style>\r\n\r\n    .width10 {\r\n        width:10rem;\r\n        overflow:hidden;\r\n    }\r\n\r\n    .paddingx1 {\r\n        padding-right:1rem;\r\n        padding-left:1rem;\r\n    }\r\n\r\n\r\n    </style>","<script lang=\"ts\">\n\nimport Master from \"./components/Master.svelte\";\nimport Staff from \"./components/Staff.svelte\";\nimport Room from \"./components/Room.svelte\";\nimport Setup from \"./components/Setup.svelte\";\n\n\nimport * as file from \"./scripts/file\";\nimport * as state from \"./scripts/state\";\n\n\n// bindings on component to allow import export functions to be called.\nlet masterChild;\nlet staffChild;\nlet roomChild;\n\nlet toggleNav=()=>{\n\tlet el=document.getElementById('sidebar');\n\tif(el.style.height===\"30rem\") el.style.height=\"0px\";\n\telse el.style.height=\"30rem\";\n};\n\nlet openPage=(index:number)=>{\n\tpageIndex=index;\n\ttoggleNav();\n}\n\nlet pageIndex:number=0;\nlet pages=[\n\t{component:Master,name:\"Master\"},\n\t{component:Staff,name:\"Staff\"},\n\t{component:Room,name:\"Room\"},\n\t{component:Setup,name:\"Setup\"},\n\t\n\t\n];\n\n\nlet toggleAbout=()=>{\n\tlet el=document.getElementById('help-modal');\n\tif(el.style.width===\"100%\") el.style.width=\"0\";\n\telse el.style.width=\"100%\";\n}\n\n\nlet toggleImportExport=()=>{\n\tlet el=document.getElementById('import-export-modal');\n\tif(el.style.width===\"100%\") {\n\t\tel.style.width=\"0\";\n\t\timportExportAction=\"\";\n\t}\n\telse el.style.width=\"100%\";\n}\n\nlet importExportAction:string=\"\";\n\nlet importExportCSV=(action)=>{\n\ttoggleNav();\n\timportExportAction=action;\n\ttoggleImportExport();\t\n}\n\n\nlet printTimetable=()=>{\n\ttoggleNav();\n\twindow.print();\n}\n\nlet files:File[];\n\n\n\n\n\nlet versions = state.getVersionKeys();\nconsole.log(versions);\nfor (let version of versions) state.initVersion(version);\nif (!state.getActive()) state.setActive(versions[0]);\n\nlet uploadVersionFile = () => {\n    file.read(files[0], res => {\n      console.log(res);\n      let version = JSON.parse(res);\n      state.putVersion(state.getActive(), version);\n\t  let activeIndex = versions.indexOf(state.getActive());\n\t  masterChild.appRefresh();\n\t  toggleImportExport();\n  \n    });\n};\n\n\t\n\n</script>\n\n<div class=\"sidebar no-print\" id=\"sidebar\">\n\n\t<div class=\"sidebar-close\">\n\t<a href=\"#\" on:click={toggleNav}>&times;</a>\n\t</div>\n\t<div>\n\t\t<ul>\n\t\t{#if pageIndex===0 || pageIndex===1 || pageIndex===2 }\n\t\t<li><a href=\"#\" class=\"medium\" on:click={()=>importExportCSV('Export')}>Export</a></li>\n\t\t{/if}\n\t\t{#if pageIndex===3}\n\t\t<li><a href=\"#\" class=\"medium disabled\">Export</a></li>\n\t\t{/if}\n\t\t{#if pageIndex===0 }\n\t\t<li><a href=\"#\" class=\"medium\" on:click={()=>importExportCSV('Import')}>Import</a></li>\n\t\t{/if}\n\t\t{#if pageIndex>0 }\n\t\t<li><a href=\"#\" class=\"medium disabled\">Import</a></li>\n\t\t{/if}\n\n\t\t{#if pageIndex===0 || pageIndex===1 || pageIndex===2 }\n\t\t<li><a href=\"#\" class=\"medium\" on:click={printTimetable}>Print</a></li>\n\t\t{/if}\n\t\t{#if pageIndex===3}\n\t\t<li><a href=\"#\" class=\"medium disabled\">Print</a></li>\n\t\t{/if}\n\t\t\n\t\t\n\t\t</ul>\n\t</div>\n</div>\n\n<div class=\"wrapper\">\n\n<div class=\"header no-print\">\n<div class=\"header-section\">\n\t<div>\n\t<a class=\"large\" href=\"#\" on:click={toggleNav}>&equiv;</a>\n\t</div>\n\t<div class=\"nav\">\n\t\t\n\t\t{#each pages as page,i}\n\t\t{#if pageIndex===i}\n\t\t<div class=\"nav-item nav-selected\" on:click={()=>pageIndex=i}>{page.name}</div>\n\t\t{/if}\n\t\t{#if pageIndex!==i}\n\t\t<div class=\"nav-item\" on:click={()=>pageIndex=i}>{page.name}</div>\n\t\t{/if}\n\t\t{/each}\n\t\t\n\t\t\n\t</div>\t\t\t\n</div>\n<div class=\"header-section\"><!--<Login/>-->AST</div>\n</div>  <!--end of header-->\n\n\n<div class=\"content\">\n\t<!--\n\t\n\t<svelte:component this={pages[pageIndex].component} />\n\t-->\n\t{#if pageIndex===0}<Master bind:this=\"{masterChild}\"></Master>{/if}\n\t{#if pageIndex===1}<Staff bind:this=\"{staffChild}\"></Staff>{/if}\n\t{#if pageIndex===2}<Room bind:this=\"{roomChild}\"></Room>{/if}\n\t{#if pageIndex===3}<Setup></Setup>{/if}\n\t\n\n\n<div class=\"modal no-print\" id=\"help-modal\">\n\t<div class=\"modal-card\">\n\t\t<h2>AST</h2>\n\t\t<div class=\"card primary-bg\"><p>Anthony's Simple Timetable.</p>\n\t\t\n\t\t<div class=\"flex-right\"><div><p>AGH MMXXI</p></div></div>\n\t\t\n\t\t</div>\n\n\t\t<button on:click={toggleAbout}>Close</button>\n\t</div>\n</div>\n\n\n<div class=\"modal no-print\" id=\"import-export-modal\">\n\t<div class=\"modal-card\">\n\t\t{#if importExportAction===\"Export\" && pages[pageIndex].name===\"Master\"}\n\t\t\t<h2>{importExportAction}</h2>\n\t\t\t<div class=\"card\">\n\t\t\t\t<h3>Export MASTER .csv for viewing in a spreadheet</h3>\n\t\t\t\t<button on:click={masterChild.exportTimetable}>Download</button>\n\t\t\t</div>\n\t\t\t<div class=\"card\">\n\t\t\t\t<h3>Export AST data file (can be imported at a later date).</h3>\n\t\t\t\t<button on:click={masterChild.exportTxt}>Download</button>\n\t\t\t</div>\n\t\t{/if}\n\t\t{#if importExportAction===\"Export\" && pages[pageIndex].name===\"Staff\"}\n\t\t<div class=\"card\">\n\t\t\t<h3>Export STAFF .csv for viewing in a spreadheet</h3>\n\t\t\t<button on:click={staffChild.exportTimetable}>Download</button>\n\t\t</div>\n\t\t{/if}\n\t\t{#if importExportAction===\"Export\" && pages[pageIndex].name===\"Room\"}\n\t\t<div class=\"card\">\n\t\t\t<h3>Export ROOM .csv for viewing in a spreadheet</h3>\n\t\t\t<button on:click={roomChild.exportTimetable}>Download</button>\n\t\t</div>\n\t\t{/if}\n\n\t\t{#if importExportAction===\"Import\"}\n\t\t\t<div class=\"card\">\n\t\t\t\t<h3>Import data file into current version.</h3>\n        <p>WARNING: This will overwrite all setup and cell data. It can't be undone. </p>\n        <p><input type=file bind:files/></p>\n        \n        {#if files && files[0]}   \n        <p><button class=\"success\" on:click={uploadVersionFile}>Process</button></p>\n        {/if}\n        \n        \n\n\n\t\t\t</div>\n\t\t{/if}\n\n\n\t\t<!--\n\t\t<h2>{importExportAction}</h2>\n\t<div class=\" card primary-bg\">\n\t<p>{importExportAction} a .csv file of the Master or Staff / Room (export only) timetables. </p>\n\t</div>\n\t<div class=\" card success-bg\">\n\t\t<p>{importExportAction} a .csv file of the Master or Staff / Room (export only) timetables. </p>\n\t</div>\n\t<div class=\" card danger-bg\">\n\t\t<p>{importExportAction} a .csv file of the Master or Staff / Room (export only) timetables. </p>\n\t</div>\n\t<p>{importExportAction} {pages[pageIndex].name}</p>\n\t-->\n\n\n\n\n\n\t\t<button on:click={toggleImportExport}>Cancel</button>\n\t\t\n\t</div>\n</div>\n</div> <!--end of content-->\n\n\n\n\n\n<div class=\"footer no-print\">\n\t<div class=\"header-section\"><a href=\"#\" on:click={toggleAbout}>About</a></div>\n\t<div class=\"header-section\"><img alt=\"logo\" width=\"30px\" height=\"30px\" src=\"./favicon.ico\"/></div>\n\n</div>\t\n\n</div> <!--end of wrapper-->\n\n\n<style>\n\n.disabled {\n  color: lightgrey;\n  cursor: not-allowed;\n  opacity: 0.5;\n  text-decoration: none;\n}\n\n\n</style>\n\n","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body,\r\n    props: {\r\n    //name: 'world'\r\n    }\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","option","__value","selected","select_value","selected_option","querySelector","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","core","yearList","weekList","subjectList","staffList","roomList","deptList","dept","subject","room","basedata","staff","code","rooms","subjects","row","w","id","s","e","rowList","blockList","blockColor","A","B","C","D","E","version","active","version1","version2","version3","version4","version5","getVersion","versionKey","JSON","parse","localStorage","getItem","putVersion","versionValue","setItem","stringify","putRow","rowObj","getVersionKeys","el","getActive","setActive","initVersion","initial.core","csvDownload","arr2d","filename","eol","String","fromCharCode","content","join","blob","Blob","url","window","URL","createObjectURL","href","download","click","read","fileObj","reader","FileReader","readAsText","onload","result","csvProcess","txt","headArr","csvToArray","headers","valid","checkArr","item","isArray","console","log","check","out","count","toString","slice","createExport","exportType","toUpperCase","col","line","y","versionName","state.getVersion","yearFlag","blockFlag","colorFlag","inputFlag","forgetFlag","yearSelected","weekSelected","subjectSelected","roomSelected","staffSelected","setSelected","refreshData","displayList","editRow","editCol","edit","replace","insertCellData","split","toggleCell","flag","getElementById","width","setInfo","staffInfo","roomInfo","state.putRow","staffCheck","roomCheck","classCheck","check.updateErrors","deleteIndex","toggleDelete","year","newIndex","pos","dataIndex","state.addRow","file.download","csv.createExport","fileName","file.csvDownload","allStaffFlag","sort","deptSelected","staffRoomData","getLessons","lesson","colObj","alreadyFlag","allRoomFlag","createBlockTemplate","blocks","trim","lessons","findIndex","files","fileData","versionKeys","state.getVersionKeys","state.getActive","activeIndex","versions","selectVersion","state.setActive","toggleVersion","nameFlag","storeName","test","state.putVersion","toggleName","copyVersionIndex","pasteVersionIndex","copyVersionKey","pasteVersionKey","copyVersion","initPaste","togglePaste","clearIndex","initClear","toggleClear","periodData","deptData","dataType","processFileData","info","file.csvToArray","setup.extractBasedata","storeBasedata","file.csvProcess","storePeriodData","storeDeptData","day","per","week","setup.createTimetableTemplates","file.read","res","copy","state.deleteData","exportTimetable","exportTxt","masterChild","staffChild","roomChild","toggleNav","height","pageIndex","pages","Master","Staff","Room","Setup","toggleImportExport","importExportAction","importExportCSV","action","state.initVersion","print","appRefresh","body"],"mappings":"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"}